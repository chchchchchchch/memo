
# --------------------------------------------------------------------------- #

function PDFXTITLE()  { THISPDFXTITLE="$*";  }
function PDFXAUTHOR() { THISPDFXAUTHOR="$*"; }
function PDFXORG()    { THISPDFXORG="$*";    }
function MKPDFXCOMPLIANT() {

# PDF/X COMPLIANCY
# ---------------- #
  echo "\usepackage[x-1a]{pdfx}"                       >> ${TMPID}.preamble
  echo "<?xpacket begin='' id='W5M0MpCehiHzreSzNTczkc9d'?>" > pdfx-1a.xmp
  cp ../lib/icc/FOGRA39L.icc .

  echo "\Keywords{pdfTeX\sep PDF/X-1a\sep PDF/A-b}
  \Title{${THISPDFXTITLE}}
  \Author{${THISPDFXAUTHOR}}
  \Org{${THISPDFXORG}}
  \Doi{123456789}" > ${TMPID}.xmpdata
  echo '\pdfpageattr{/MediaBox [0 0 436 612]
               /TrimBox [8 8 428 604]}
        \pdfcatalog{
        /OutputIntents [ <<
       /Info (none)
      /Type /OutputIntent
     /S /GTS_PDFX
    /OutputConditionIdentifier (OFCOM_PO_P1_F60_95)
   /RegistryName (http://www.color.org/)
   >> ]
       }'                                               >> ${TMPID}.preamble

}

# --------------------------------------------------------------------------- #

function USEPACKAGE() {

  PACKAGE=`echo $1 | sed 's/ //g'`
  echo "\usepackage{$PACKAGE}" >> ${TMPID}.preamble
}

# --------------------------------------------------------------------------- #

function DOCUMENTCLASS() { 
 
  THISDOCUMENTCLASS=`echo "$1"          | #
                     sed 's/ //g'       | #
                     sed 's,\},\\\\},g' | #
                     sed 's,{,\\\\{,g'  | #
                     sed 's,\],\\\\],g' | #
                     sed 's,\[,\\\\[,g'`  #
}

# --------------------------------------------------------------------------- #

function ADD2PREAMBLE() { echo "$*" >> ${TMPID}.preamble ; }

# --------------------------------------------------------------------------- #



# =========================================================================== #
# SHARED SVG FUNCTIONS
# =========================================================================== #
  function svgonlines() {

  SVGIN="$1"
    OUT="$2"
# --------------------------------------------------------------------------- #
  BFOO=`echo N${RANDOM}FO0 | cut -c 1-8`
  SFOO=`echo S${RANDOM}F0O | cut -c 1-8`
# --------------------------------------------------------------------------- #
# MOVE ALL LAYERS ON SEPARATE LINES (TEMPORARILY; EASIFY PARSING LATER ON)
# --------------------------------------------------------------------------- #
  sed ":a;N;\$!ba;s/\n/$BFOO/g" $SVGIN   | # REMOVE ALL LINEBREAKS (BUT SAVE)
  sed "s/ /$SFOO/g"                      | # REMOVE ALL SPACE (BUT SAVE)
  sed 's/<g/4Fgt7RfjIoPg7/g'             | # PLACEHOLDER FOR GROUP OPEN
  sed ':a;N;$!ba;s/\n/ /g'               | # REMOVE ALL NEW LINES
  sed 's/4Fgt7RfjIoPg7/\n<g/g'           | # RESTORE GROUP OPEN + NEWLINE
  sed '/groupmode="layer"/s/<g/4Fgt7R/g' | # PLACEHOLDER FOR LAYERGROUP OPEN
  sed ':a;N;$!ba;s/\n/ /g'               | # REMOVE ALL LINEBREAKS
  sed 's/4Fgt7R/\n<g/g'                  | # RESTORE LAYERGROUP OPEN + NEWLINE
  sed 's/<\/svg>/\n&/g'                  | # PUT SVG CLOSE ON NEW LINE
  sed 's/display:none/display:inline/g'  | # MAKE VISIBLE EVEN WHEN HIDDEN
  tee > ${OUT}                             # WRITE TO TEMPORARY FILE
# --------------------------------------------------------------------------- #

  }
# =========================================================================== #



# --------------------------------------------------------------------------- #

function FRONTCOVER() {

  CROP="10.63"
  CANVASWIDTH="545.66876"
  SVG="$1"; OUT=$TMPID`echo $SVG | md5sum | cut -c 1-8`.lines
  if [ ! -f $OUT ]; then svgonlines $SVG $OUT ; fi

  if [ ! -f $OUT ]; then
       svgonlines $SVG $OUT 
  fi

  XSHIFT=-`python -c "print $CANVASWIDTH - $CROP"`
  TRANSFORM="transform=\"translate($XSHIFT,0)\""
  head -n 1 $OUT              >  supertmp.svg
  echo "<g $TRANSFORM>"       >> supertmp.svg
  grep 'label=\"AUSSEN' $OUT  >> supertmp.svg
  echo "</g></svg>"           >> supertmp.svg
  sed -i "s/$BFOO/\n/g" supertmp.svg
  sed -i "s/$SFOO/ /g"  supertmp.svg
  inkscape --export-pdf=1.pdf \
           --export-text-to-path supertmp.svg
  conformColor 1.pdf
  XSHIFT="-$CROP"
  TRANSFORM="transform=\"translate($XSHIFT,0)\""
  head -n 1 $OUT              >  supertmp.svg
  echo "<g $TRANSFORM>"       >> supertmp.svg
  grep 'label=\"INNEN' $OUT   >> supertmp.svg
  echo "</g></svg>"           >> supertmp.svg
  sed -i "s/$BFOO/\n/g" supertmp.svg
  sed -i "s/$SFOO/ /g"  supertmp.svg
  inkscape --export-pdf=2.pdf \
           --export-text-to-path supertmp.svg
  conformColor 2.pdf
  pdftk 1.pdf 2.pdf cat output ${TMPID}frontcover.pdf

  write2src "\includepdf[scale=1,pages=1-2]{${TMPID}frontcover.pdf}"
  write2src "\setcounter{page}{1}"

  rm supertmp.svg 1.pdf 2.pdf
}

# --------------------------------------------------------------------------- #

function BACKCOVER() {

  CROP="10.63"
  CANVASWIDTH="545.66876"
  SVG="$1"; OUT=$TMPID`echo $SVG | md5sum | cut -c 1-8`.lines
  if [ ! -f $OUT ]; then svgonlines $SVG $OUT ; fi

  XSHIFT=-`python -c "print $CANVASWIDTH - $CROP"`
  TRANSFORM="transform=\"translate($XSHIFT,0)\""
  head -n 1 $OUT              >  supertmp.svg
  echo "<g $TRANSFORM>"       >> supertmp.svg
  grep 'label=\"INNEN' $OUT   >> supertmp.svg
  echo "</g></svg>"           >> supertmp.svg
  sed -i "s/$BFOO/\n/g" supertmp.svg
  sed -i "s/$SFOO/ /g"  supertmp.svg
  inkscape --export-pdf=2.pdf \
           --export-text-to-path supertmp.svg
  conformColor 2.pdf
  XSHIFT="-$CROP"
  TRANSFORM="transform=\"translate($XSHIFT,0)\""
  head -n 1 $OUT              >  supertmp.svg
  echo "<g $TRANSFORM>"       >> supertmp.svg
  grep 'label=\"AUSSEN' $OUT  >> supertmp.svg
  echo "</g></svg>"           >> supertmp.svg
  sed -i "s/$BFOO/\n/g" supertmp.svg
  sed -i "s/$SFOO/ /g"  supertmp.svg
  inkscape --export-pdf=1.pdf \
           --export-text-to-path supertmp.svg
  conformColor 1.pdf
  pdftk 2.pdf 1.pdf cat output ${TMPID}backcover.pdf

  write2src "\clearforend"
  write2src "\includepdf[scale=1,pages=1-2]{${TMPID}backcover.pdf}"

  rm supertmp.svg 1.pdf 2.pdf
}

# --------------------------------------------------------------------------- #

